{"version":3,"file":"store.manager.umd.js","sources":["../src/store.manager.js"],"sourcesContent":["/**\n * @Author: houshengwei\n * @Date:   2018/07/22\n * @Last modified by:   houshengwei\n * @Last modified time: 2018/07/22\n */\n\nclass StoreManager {\n  constructor (args) {\n    this.args = args\n    this.instance = ''\n    this.executing = false\n  }\n\n  _getType (any) {\n    return Object.prototype.toString.call(any).slice(8, -1)\n  }\n\n  start (...args) {\n    if (!this.instance) {\n      this.instance = new StoreManager(args)\n\n      let url = window.location.href\n      let [rules = [], $store, ...rest] = args\n\n      window.addEventListener('hashchange', () => {\n        this.instance && this.instance.updateStore()\n      })\n      window.addEventListener('popstate', () => {\n        this.instance && this.instance.updateStore()\n      })\n\n      $store.registerModule('_storeManage_', {\n        namespaced: true,\n        state: {\n          version: '0.0.1',\n          'MOUNTED': ''\n        },\n        mutations: {\n          'MOUNTED' (state, payload) {\n            state['MOUNTED'] = payload\n          }\n        }\n      })\n    }\n\n    return this.instance\n  }\n\n  updateStore (url) {\n    if (this.executing) return\n\n    try {\n      url = url || window.location.href\n      if (!url) throw ''\n    } catch (e) {\n      throw new Error('非浏览器环境时,需要提供参数: 匹配对象<String>, 如url等')\n    }\n    this.executing = true\n\n    let [rules, $store, ...rest] = this.args\n    let matched = []\n    let notMatched = []\n    let mounted = []\n\n    rules.forEach(item => {\n      let isMatched\n      if (this._getType(item.rule) === 'RegExp') {\n        isMatched = item.rule.test(url)\n      } else if (this._getType(item.rule) === 'Function') {\n        isMatched = item.rule(url, ...this.args)\n      } else {\n        throw new Error('Expected the `rule` to be a function or regExp.')\n      }\n      if (isMatched) {\n        matched.push(item)\n      } else {\n        notMatched.push(item)\n      }\n    })\n\n    matched.forEach(item => {\n      let {name, module} = item\n      if (!name || !module) {\n        throw new Error('Missing `name` or `module` for rules')\n      }\n\n      if (module.namespaced !== false) {\n        module.namespaced = true\n      }\n\n      if ($store.state[name] === undefined) {\n        $store.registerModule(name, module)\n      }\n\n      mounted.push(name)\n    })\n\n    setTimeout(() => {\n      notMatched.forEach(item => {\n        let moduleName = item.name\n        $store.state[moduleName] && $store.unregisterModule(moduleName)\n      })\n\n      $store.commit('_storeManage_/MOUNTED', `_${mounted.join('_')}_`)\n      this.executing = false\n    }, 100)\n  }\n}\n\nlet storeManager = new StoreManager()\nexport default storeManager\n"],"names":["storeManager","args","instance","executing","any","Object","prototype","toString","call","slice","this","StoreManager","window","location","href","rules","addEventListener","_this","updateStore","registerModule","state","payload","url","e","Error","$store","matched","notMatched","mounted","forEach","isMatched","_this2","_getType","item","rule","test","push","name","module","namespaced","undefined","moduleName","unregisterModule","commit","join"],"mappings":"kYA8GIA,EAAe,0BAtGJC,kBACNA,KAAOA,OACPC,SAAW,QACXC,WAAY,6CAGTC,UACDC,OAAOC,UAAUC,SAASC,KAAKJ,GAAKK,MAAM,GAAI,kDAIhDC,KAAKR,SAAU,4BADZD,8CAEDC,SAAW,IAAIS,EAAaV,GAEvBW,OAAOC,SAASC,KACUb,SAA/Bc,EAA+Bd,KAAAA,kBAE7Be,iBAAiB,aAAc,aAC/Bd,UAAYe,EAAKf,SAASgB,uBAE1BF,iBAAiB,WAAY,aAC7Bd,UAAYe,EAAKf,SAASgB,kBAG1BC,eAAe,6BACR,iBAED,gBACE,gCAGAC,EAAOC,KAChB,QAAmBA,aAMpBX,KAAKR,6CAGDoB,kBACPZ,KAAKP,sBAGDmB,GAAOV,OAAOC,SAASC,MACnB,KAAM,GAChB,MAAOS,SACD,IAAIC,MAAM,4CAEbrB,WAAY,aAEcO,KAAKT,uCAA/Bc,OAAOU,OACRC,kBACAC,KACAC,OAEEC,QAAQ,gBACRC,YAC6B,WAA7BC,EAAKC,SAASC,EAAKC,QACTD,EAAKC,KAAKC,KAAKb,OACtB,CAAA,GAAiC,aAA7BS,EAAKC,SAASC,EAAKC,YAGtB,IAAIV,MAAM,qDAFJS,EAAKC,cAAKZ,iIAAQS,EAAK9B,QAIjC6B,IACMM,KAAKH,KAEFG,KAAKH,OAIZJ,QAAQ,gBACTQ,EAAgBJ,EAAhBI,KAAMC,EAAUL,EAAVK,WACND,IAASC,QACN,IAAId,MAAM,yCAGQ,IAAtBc,EAAOC,eACFA,YAAa,QAGKC,IAAvBf,EAAOL,MAAMiB,MACRlB,eAAekB,EAAMC,KAGtBF,KAAKC,gBAGJ,aACER,QAAQ,gBACbY,EAAaR,EAAKI,OACfjB,MAAMqB,IAAehB,EAAOiB,iBAAiBD,OAG/CE,OAAO,4BAA6Bf,EAAQgB,KAAK,YACnDzC,WAAY,GAChB"}